# ~/.tmuxinator/project_crazyflie_basic.yml

<%
# Input parameters
drones              = @settings["drones"]
estimator_plugin    = @settings["estimator_plugin"]

# Other parameters
behavior_type       = "position"

if estimator_plugin == "mocap_pose"
    platform_config_file = "config/platform_config_mocap.yaml"
elsif estimator_plugin == "raw_odometry"
    platform_config_file = "config/platform_config_flowdeck.yaml"
end

config_path          = "config"

%>
attach: false
root: ./
startup_window: alphanumeric_viewer
windows:
  - alphanumeric_viewer:
      layout: even-vertical
      panes:
    <%- drones.split(':').each do |drone| %>
        - ros2 run as2_alphanumeric_viewer as2_alphanumeric_viewer_node
            --ros-args -r  __ns:=/<%= drone %>
    <%- end %>
  - platform:
      panes:
        - ros2 launch as2_platform_crazyflie crazyflie_swarm_launch.py
            platform_config_file:=<%= platform_config_file %>
            swarm_config_file:=<%= config_path %>/swarm_config.yaml
  - state_estimator:
      layout: even-vertical
      panes:
    <%- drones.split(':').each do |drone| %>
        - ros2 launch as2_state_estimator state_estimator_launch.py
            namespace:=<%= drone %>
            use_sim_time:=false
            plugin_name:=<%= estimator_plugin %>
            plugin_config_file:=<%= config_path %>/<%= drone %>_state_estimator.yaml
    <%- end %>
  - controller:
      layout: even-vertical
      panes:
    <%- drones.split(':').each do |drone| %>
        - ros2 launch as2_motion_controller controller_launch.py
            namespace:=<%= drone %>
            use_sim_time:=false
            plugin_name:=pid_speed_controller
            motion_controller_config_file:=<%= config_path %>/motion_controller.yaml
            plugin_config_file:=<%= config_path %>/motion_controller_plugin.yaml
    <%- end %>
  - behaviors:
      layout: even-vertical
      panes:
    <%- drones.split(':').each do |drone| %>
        - ros2 launch as2_behaviors_motion composable_motion_behaviors.launch.py
            namespace:=<%= drone %>
            use_sim_time:=false
            follow_path_plugin_name:=follow_path_plugin_<%= behavior_type %>
            go_to_plugin_name:=go_to_plugin_position
            takeoff_plugin_name:=takeoff_plugin_position
            land_plugin_name:=land_plugin_speed
        <%- if behavior_type == "trajectory" %>
        - ros2 launch as2_behaviors_trajectory_generation composable_generate_polynomial_trajectory_behavior.launch.py
            container:=behaviors
            namespace:=<%= drone %>
            use_sim_time:=false && exit
        <%- end %>
    <%- end %>
  - rviz:
      panes:
        - rviz2 -d rviz/multi_ranger.rviz
  - exploration_server:
      layout: even-vertical
      panes:
        - ros2 launch as2_path_planning map_server.launch.py
            namespace:=map_server
            use_sim_time:=false
            config_file:=<%= config_path %>/exploration.yaml
        - ros2 launch as2_path_planning frontier_allocator.launch.py
            use_sim_time:=false
            config_file:=<%= config_path %>/exploration.yaml
        # - ros2 launch as2_path_planning safeguard.launch.py
        #     use_sim_time:=false
        #     config_file:=<%= config_path %>/exploration.yaml
  <%- drones.split(':').each do |drone| %>
  - explorer_<%= drone %>:
      layout: even-vertical
      panes:
        - ros2 launch as2_path_planning laserscan_to_occupancy_grid.launch.py
            namespace:=<%= drone %>
            use_sim_time:=false
            config_file:=<%= config_path %>/exploration.yaml
            output_topic:=/map_server/input_occupancy_grid
        - ros2 launch as2_path_planning path_planner.launch.py
            namespace:=<%= drone %>
            use_sim_time:=false
            config_file:=<%= config_path %>/exploration.yaml
        - ros2 launch as2_path_planning explorer.launch.py
            namespace:=<%= drone %>
            use_sim_time:=false
            config_file:=<%= config_path %>/exploration.yaml
    <%- end %>
  - evaluator:
      panes:
        - python scripts/evaluate.py -s
        - 